@{
    Layout = "_Backstage";
}

<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-1 mt-1">
            <div class="col-sm-6">
                <h1 class="m-0">管理員清單</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/backstage/dashboard">Home</a></li>
                    <li class="breadcrumb-item active">Admins</li>
                </ol>
            </div>
        </div>
    </div>
</div>
<!-- /.content-header -->
<!-- Main content -->
<section class="content">
    <!-- Default box -->
    <div class="card">
        <div id="VueAdminPage" class="card-body">
            <div class="float-sm-right" v-if="checkRoleName">
                <a class="btn btn-primary btn-sm mb-1" href="#" data-bs-toggle="modal"
                    data-bs-target="#addModal">新增管理員</a>
            </div>
            <div class="table-responsive text-nowrap">
                <table class="table table-bordered table-striped table-hover">
                    <thead>
                        <tr>
                            <th>管理員編號</th>
                            <th>帳號</th>
                            <th>管理員名稱</th>
                            <th>電話</th>
                            <th>電子郵件</th>
                            <th>權限</th>
                            <th>編輯</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="ad in adminsByPage" :key="ad.userId">
                            <td>{{ad.userId}}</td>
                            <td>{{ad.account}}</td>
                            <td>{{ad.administratorName}}</td>
                            <td>{{ad.phoneNumber}}</td>
                            <td>{{ad.email}}</td>
                            <td>{{ad.roles}}</td>
                            <td class="project-actions text-center">
                                <a class="btn btn-info btn-sm" href="#" data-bs-toggle="modal"
                                    data-bs-target="#editModal" v-on:click="editModal(ad)"><i
                                        class="fas fa-pencil-alt"></i>修改</a>
                                <a class="btn btn-danger btn-sm" href="#" v-on:click="deleteInfo(ad)"><i
                                        class="fas fa-trash"></i>刪除</a>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <nav aria-label="..." v-if="pageVisible">
                    <ul class="pagination">
                        <li :class="{ 'disabled': currentPage === 1 }">
                            <a class="page-link" href="#" v-on:click.prevent="prevPage()">Previous</a>
                        </li>
                        <li v-for="page in totalPages" :key="page" :class="{ 'active': currentPage === page }">
                            <a class="page-link" href="#" v-on:click.prevent="changePage(page)">{{ page }}</a>
                        </li>
                        <li :class="{ 'disabled': currentPage === totalPages }">
                            <a class="page-link" href="#" v-on:click.prevent="nextPage()">Next</a>
                        </li>
                    </ul>
                </nav>
            </div>
            <!-- Modal New Add Admin -->
            <div class="modal fade" id="addModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
                aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5" id="staticBackdropLabel">新增管理員資料</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"
                                v-on:click="closeAdd"></button>
                        </div>
                        <div class="modal-body">
                            <div class="row mb-1">
                                <label for="administratorAccount" class="col-sm-4">帳號 :</label>
                                <input id="administratorAccount" class="col-sm-5" type="text" v-model="addAdmin.account"
                                    placeholder="輸入管理員帳號">
                            </div>
                            <div class="row mb-1">
                                <label for="administratorName" class="col-sm-4">管理員名稱 :</label>
                                <input id="administratorName" class="col-sm-5" type="text"
                                    v-model="addAdmin.administratorName" placeholder="輸入管理員名稱">
                            </div>

                            <div class="row mb-1">
                                <label for="password" class="col-sm-4">密碼 :</label>
                                <input id="password" class="col-sm-5" type="password" v-model="addPassword.password"
                                    placeholder="輸入八位數新密碼">
                            </div>
                            <div class="row mb-1">
                                <label for="confirmPassword" class="col-sm-4">確認密碼 :</label>
                                <input id="confirmPassword" class="col-sm-5" type="password"
                                    v-model="addPassword.confirmPassword" placeholder="確認八位數新密碼">
                            </div>
                            <div class="row mb-1">
                                <label for="phoneNumber" class="col-sm-4">電話 :</label>
                                <input id="phoneNumber" class="col-sm-5" type="text" v-model="addAdmin.phoneNumber"
                                    placeholder="輸入電話">
                            </div>
                            <div class="row mb-1">
                                <label for="email" class="col-sm-4">電子郵件 :</label>
                                <input id="email" class="col-sm-5" type="email" v-model="addAdmin.email"
                                    placeholder="輸入電子郵件">
                            </div>
                            <div class="row mb-1">
                                <label for="roles" class="col-sm-4">權限 :</label>
                                <select name="roles" id="roles" class="col-sm-5" v-model="addAdmin.roles">
                                    <option value="" disabled>請選擇</option>
                                    <option value="SuperAdministrator">SuperAdministrator</option>
                                    <option value="ChiefAdministrator">ChiefAdministrator</option>
                                    <option value="Administrator">Administrator</option>
                                </select>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"
                                v-on:click="closeAdd">取消</button>
                            <button type="button" class="btn btn-primary" data-bs-dismiss="modal"
                                v-on:click="createAdmin">確認新增</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Modal EditAdmin-->
            <div class="modal fade" id="editModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
                aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5" id="staticBackdropLabel">修改管理員資料</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"
                                v-on:click="close"></button>
                        </div>
                        <div class="modal-body" v-if="editAdmin != null">
                            <div class="row mb-1">
                                <label class="col-sm-4">管理員編號 :</label>
                                <label class="col-sm-5">{{editAdmin.userId}}</label>
                            </div>
                            <div class="row mb-1">
                                <label class="col-sm-4">帳號 :</label>
                                <label class="col-sm-5">{{editAdmin.account}}</label>

                            </div>
                            <div class="row mb-1">
                                <label for="editAdministratorName" class="col-sm-4">管理員名稱 :</label>
                                <input id="editAdministratorName" class="col-sm-5" type="text"
                                    v-model="editAdmin.administratorName">
                            </div>

                            <div class="row mb-1">
                                <label for="editPassword" class="col-sm-4">密碼 :</label>
                                <input id="editPassword" class="col-sm-5" type="password"
                                    v-model="editPassword.password" placeholder="輸入八位數新密碼">
                            </div>
                            <div class="row mb-1">
                                <label for="editConfirmPassword" class="col-sm-4">確認密碼 :</label>
                                <input id="editConfirmPassword" class="col-sm-5" type="password"
                                    v-model="editPassword.confirmPassword" placeholder="確認八位數新密碼">
                            </div>
                            <div class="row mb-1">
                                <label for="editPhoneNumber" class="col-sm-4">電話 :</label>
                                <input id="editPhoneNumber" class="col-sm-5" type="text"
                                    v-model="editAdmin.phoneNumber">
                            </div>
                            <div class="row mb-1">
                                <label for="editEmail" class="col-sm-4">電子郵件 :</label>
                                <input id="editEmail" class="col-sm-5" type="email" v-model="editAdmin.email">
                            </div>
                            <div class="row mb-1" v-if="checkRoleName">
                                <label for="editRoles" class="col-sm-4">權限 :</label>
                                <select name="editRoles" id="roles" class="col-sm-5" v-model="editAdmin.roles">
                                    <option value="" disabled>請選擇</option>
                                    <option value="SuperAdministrator">SuperAdministrator</option>
                                    <option value="ChiefAdministrator">ChiefAdministrator</option>
                                    <option value="Administrator">Administrator</option>
                                </select>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"
                                v-on:click="close">取消</button>
                            <button type="button" class="btn btn-primary" data-bs-dismiss="modal"
                                v-on:click="editinfo">確認修改</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.card-body -->
    </div>
    <!-- /.card -->

</section>
<!-- /.content -->
</div>
<!-- /.content-wrapper -->

@section Scripts{
    <script>
        var VueAdminPage = new Vue({
            el: "#VueAdminPage",
            data: {
                Admins: [],
                addAdmin: {
                    account: '',
                    administratorName: '',
                    email: '',
                    phoneNumber: '',
                    roles: '',
                    userId: '',
                },
                addPassword: {
                    password: '',
                    confirmPassword: '',
                },
                editAdmin: null,
                editPassword: {
                    password: '********',
                    confirmPassword: '********',
                },
                ErrMsg: '',
                Success: '',
                checkRoleName: false,
                currentPage: 1,
                pageSize: 10,
                pageVisible: true,
            },
            mounted: function () {
                this.checkRole();
                var self = this;
                axios({
                    method: 'get',
                    url: '/Administrators/AdministratorApi/GetAllAdmins'
                })
                    .then(function (res) {
                        console.log(res);
                        self.Admins = res.data;
                    })
                    .catch(function (error) {
                        console.log(error);
                    });
            },
            computed:{
                totalPages() {
                    const total = Math.ceil(this.Admins.length / this.pageSize)
                    if(total ===1){
                        this.pageVisible = false;
                    }
                    return total;
                },
                adminsByPage() {
                    const startIndex = (this.currentPage - 1) * this.pageSize;
                    const endIndex = startIndex + this.pageSize;
                    return this.Admins.slice(startIndex, endIndex);
                },
            },
            methods: {
                prevPage() {
                    if (this.currentPage > 1) {
                        this.changePage(this.currentPage - 1);
                    }
                },
                nextPage() {
                    if (this.currentPage < this.totalPages) {
                        this.changePage(this.currentPage + 1);
                    }
                },
                changePage(page) {
                    this.currentPage = page;
                },
                RoleName: function (request) {
                    switch (request) {
                        case '3':
                            return "SuperAdministrator";
                        case '4':
                            return "ChiefAdministrator";
                        case '5':
                            return "Administrator";
                    }
                },
                RoleValue: function (request) {
                    switch (request) {
                        case 'SuperAdministrator':
                            return 3;
                        case 'ChiefAdministrator':
                            return 4;
                        case 'Administrator':
                            return 5;
                    }
                },
                checkRole: function () {
                    var self = this;
                    axios({
                        method: 'get',
                        url: '/Administrators/AdministratorApi/GetAdmin'
                    })
                        .then(function (res) {
                            console.log(res);
                            if (res.data.roles == "SuperAdministrator") {
                                self.checkRoleName = true;
                            }
                        })
                        .catch(function (error) {
                            console.log(error);
                        });
                },
                createAdmin: function () {
                    var self = this;
                    var newAdd = {};
                    self.addAdmin.roles = self.RoleValue(self.addAdmin.roles);
                    Object.assign(newAdd, self.addPassword, self.addAdmin);
                    axios({
                        method: 'post',
                        url: '/Administrators/AdministratorApi/Register',
                        data: newAdd,
                    })
                        .then(function (res) {
                            console.log(res);
                            self.Success = res.data;
                            self.addAdmin.userId = parseInt(res.data.split(':')[1]);
                            self.addAdmin.roles = self.RoleName(self.addAdmin.roles.toString());
                            self.Admins.push(self.addAdmin);
                            self.addAdmin = {
                                account: '',
                                administratorName: '',
                                email: '',
                                phoneNumber: '',
                                roles: '',
                                userId: '',
                            };
                            self.addPassword = {
                                password: '',
                                confirmPassword: ''
                            };
                            Swal.fire({
                                title: self.Success,
                                icon: 'success',
                                timer: 12000
                            });

                        })
                        .catch(function (error) {
                            console.log(error);
                            self.ErrMsg = error.response.data.errors;
                            var message = Object.values(error.response.data.errors).join('<br>');
                            Swal.fire({
                                title: '新增失敗',
                                text: `${message}`,
                                icon: 'error',
                                timer: 12000
                            });

                        });

                },
                editModal: function (request) {
                    this.editAdmin = { ...request };
                },
                editinfo: function () {
                    var self = this;
                    self.editAdmin.roles = self.RoleValue(self.editAdmin.roles);
                    var edit = Object.assign(self.editAdmin, self.editPassword);
                    axios({
                        method: 'put',
                        url: `/Administrators/AdministratorApi/UpdateAdmin/${self.editAdmin.userId}`,
                        data: edit,
                    })
                        .then(function (res) {
                            console.log(res);
                            self.Success = res.data;
                            self.editAdmin.roles = self.RoleName(self.editAdmin.roles.toString());
                            const index = self.Admins.findIndex(m => m.userId === self.editAdmin.userId);
                            self.Admins.splice(index, 1, self.editAdmin);
                            self.editAdmin = null;
                            self.editPassword.password = '********',
                                self.editPassword.confirmPassword = '********',
                                Swal.fire({
                                    title: self.Success,
                                    icon: 'success',
                                    timer: 12000
                                });
                        })
                        .catch(function (error) {
                            console.log(error);
                            self.ErrMsg = error.response.data.errors;
                            var message = Object.values(error.response.data.errors).join('<br>');
                            Swal.fire({
                                title: '修改失敗',
                                text: `${message}`,
                                icon: 'error',
                                timer: 12000
                            });
                        });

                },
                close: function () {
                    this.editAdmin = null;
                    this.editPassword = {
                        password: '********',
                        confirmPassword: '********'
                    };
                },
                closeAdd: function () {
                    this.addAdmin = {
                        account: '',
                        administratorName: '',
                        email: '',
                        phoneNumber: '',
                        roles: '',
                        userId: '',
                    };
                    this.addPassword = {
                        password: '',
                        confirmPassword: ''
                    };
                },
                deleteInfo: function (request) {
                    var self = this;
                    Swal.fire({
                        title: '確認要刪除?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: '是的, 刪除!',
                        cancelButtonText: '取消!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            axios({
                                method: 'delete',
                                url: `/Administrators/AdministratorApi/DeleteAdmin/${request.userId}`
                            }).then(function (res) {
                                console.log(res);
                                const index = self.Admins.findIndex(m => m.userId === request.userId);
                                self.Admins.splice(index, 1);
                            })
                                .catch(function (error) {
                                    console.log(error);
                                });
                            Swal.fire(
                                '刪除!',
                                '資料已刪除.',
                                'success'
                            );
                        }
                    })
                }
            }
        });

    </script>
}
