@{
    Layout = "_Backstage";
}
<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-1 mt-1">
            <div class="col-sm-6">
                <h1 class="m-0">訂單清單</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/backstage/dashboard">Home</a></li>
                    <li class="breadcrumb-item active">Orders</li>
                </ol>
            </div>
        </div>
    </div>
</div>
<!-- /.content-header -->
<!-- Main content -->
<section class="content">
    <!-- Default box -->
    <div class="card">
        <div id="VueOrderPage" class="card-body">
            <div class="table-responsive text-nowrap">
                <table class="table table-bordered table-striped table-hover">
                    <thead>
                        <tr>
                            <th>訂單編號</th>
                            <th>訂單日期</th>
                            <th>總價</th>
                            <th>付款狀態</th>
                            <th>出貨狀態</th>
                            <th>出貨日期</th>
                            @* <th>到貨日期</th> *@
                            <th>會員編號</th>
                            <th>郵遞區號</th>
                            <th>出貨國家</th>
                            <th>出貨城市</th>
                            <th>出貨地址</th>
                            @* <th>細項清單</th> *@
                        </tr>
                    </thead>
                    <tbody class="accordion" id="ordersAccordion">
                        <tr v-for="o in ordersByPage" :key="o.orderId" class="accordion-item">
                            <th>{{o.orderId}}</th>
                            <th>{{o.orderDate}}</th>
                            <th>$ {{o.total}}</th>
                            <th>{{o.paymentCategoryName}}</th>
                            <th>{{o.shipCategoryName}}</th>
                            <th>{{o.shipDate}}</th>
                            <th>{{o.memberId}}</th>
                            <th>{{o.shipPostalCode}}</th>
                            <th>{{o.shipCountry}}</th>
                            <th>{{o.shipCity}}</th>
                            <th>{{o.shipAddress}}</th>
                            @* <th class="accordion-header" :id="'heading-' + o.orderId">
                                <a class="accordion-button" type="button" data-bs-toggle="collapse"
                                    :data-bs-target="'#collapse-' + o.orderId" aria-expanded="false"
                                    :aria-controls="'collapse-' + o.orderId" v-on:click="activeOrderId = o.orderId">
                                    細項
                                </a>
                            </th> *@
                        </tr>
                    </tbody>
                </table>
                <nav aria-label="..." v-if="pageVisible">
                    <ul class="pagination">
                        <li :class="{ 'disabled': currentPage === 1 }">
                            <a class="page-link" href="#" v-on:click.prevent="prevPage()">Previous</a>
                        </li>
                        <li v-for="page in totalPages" :key="page" :class="{ 'active': currentPage === page }">
                            <a class="page-link" href="#" v-on:click.prevent="changePage(page)">{{ page }}</a>
                        </li>
                        <li :class="{ 'disabled': currentPage === totalPages }">
                            <a class="page-link" href="#" v-on:click.prevent="nextPage()">Next</a>
                        </li>
                    </ul>
                </nav>
                @* <div v-for="o in orders" :key="o.orderId">
                    <div :id="'collapse-' + o.orderId" class="accordion-collapse collapse"
                        :class="{ 'show': o.orderId === activeOrderId }" :aria-labelledby="'heading-' + o.orderId"
                        data-bs-parent="#ordersAccordion">
                        <div class="accordion-body">
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>產品名稱</th>
                                        <th>單價</th>
                                        <th>數量</th>
                                        <th>應計</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr v-for="p in o.orderDetails" :key="p.productId">
                                        <td>{{ p.productName }}</td>
                                        <td>{{ p.unitPrice }}</td>
                                        <td>{{ p.quantity }}</td>
                                        <td>{{ p.subtotal}}</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div> *@
            </div>
        </div>
        <!-- /.card-body -->
    </div>
    <!-- /.card -->

</section>
<!-- /.content -->
</div>
<!-- /.content-wrapper -->

@section Scripts{
    <script>
        var VueOrderPage = new Vue({
            el: "#VueOrderPage",
            data: {
                orders: [],
                activeOrderId: null,
                ErrMsg: '',
                Success: '',
                currentPage: 1,
                pageSize: 10,
                pageVisible: true,
            },
            mounted: function () {
                this.getAllOrders();
            },
            computed: {
                totalPages() {
                    const total = Math.ceil(this.orders.length / this.pageSize)
                    if(total ===1){
                        this.pageVisible = false;
                    }
                    return total;
                },
                ordersByPage() {
                    const startIndex = (this.currentPage - 1) * this.pageSize;
                    const endIndex = startIndex + this.pageSize;
                    return this.orders.slice(startIndex, endIndex);
                },
            },
            methods: {
                prevPage() {
                    if (this.currentPage > 1) {
                        this.changePage(this.currentPage - 1);
                    }
                },
                nextPage() {
                    if (this.currentPage < this.totalPages) {
                        this.changePage(this.currentPage + 1);
                    }
                },
                changePage(page) {
                    this.currentPage = page;
                },
                getAllOrders: function () {
                    var self = this;
                    axios({
                        method: 'get',
                        url: '/Administrators/AdministratorApi/GetAllOrders'
                    })
                        .then(function (res) {
                            console.log(res);
                            self.orders = res.data;
                        })
                        .catch(function (error) {
                            console.log(error);
                        });
                }
            }
        });

    </script>
}