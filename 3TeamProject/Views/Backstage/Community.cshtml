@{
    Layout = "_Backstage";
}

<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-1 mt-1">
            <div class="col-sm-6">
                <h1 class="m-0">活動清單</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="/backstage/dashboard">Home</a></li>
                    <li class="breadcrumb-item active">SocialActivities</li>
                </ol>
            </div>
        </div>
    </div>
</div>
<!-- /.content-header -->
<!-- Main content -->
<section class="content">
    <!-- Default box -->
    <div class="card">
        <div id="VueActivitiesPage" class="card-body">
            <div class="table-responsive text-nowrap">
                <table class="table table-bordered table-striped table-hover">
                    <thead>
                        <tr>
                            <th>活動編號</th>
                            <th>揪團名稱</th>
                            <th>揪團地點</th>
                            <th>限制人數</th>
                            <th>參與人數</th>
                            <th>揪團發起時間</th>
                            <th>參與截止時間</th>
                            <th>發起人</th>
                            <th>編輯</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr v-for="a in activitiesByPage" :key="a.activityId">
                            <th>{{a.activityId}}</th>
                            <th>{{a.activitiesName}}</th>
                            <th>{{a.activitiesAddress}}</th>
                            <th>{{a.limitCount}}</th>
                            <th>{{a.joinCount}}</th>
                            <th>{{a.createdTime}}</th>
                            <th>{{a.endTime}}</th>
                            <th>{{a.memberName}}</th>
                            <td class="project-actions text-center">
                                <a class="btn btn-info btn-sm" href="#" data-bs-toggle="modal"
                                    data-bs-target="#editModal" v-on:click="editModal(a)"><i
                                        class="fas fa-pencil-alt"></i>修改</a>
                                <a class="btn btn-danger btn-sm" href="#" v-on:click="deleteInfo(a)"><i
                                        class="fas fa-trash"></i>刪除</a>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <nav aria-label="..." v-if="pageVisible">
                    <ul class="pagination">
                        <li :class="{ 'disabled': currentPage === 1 }">
                            <a class="page-link" href="#" v-on:click.prevent="prevPage()">Previous</a>
                        </li>
                        <li v-for="page in totalPages" :key="page" :class="{ 'active': currentPage === page }">
                            <a class="page-link" href="#" v-on:click.prevent="changePage(page)">{{ page }}</a>
                        </li>
                        <li :class="{ 'disabled': currentPage === totalPages }">
                            <a class="page-link" href="#" v-on:click.prevent="nextPage()">Next</a>
                        </li>
                    </ul>
                </nav>
            </div>
            
            <!-- Modal EditActivity-->
            <div class="modal fade" id="editModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
                aria-labelledby="staticBackdropLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h1 class="modal-title fs-5" id="staticBackdropLabel">修改活動資料</h1>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"
                                v-on:click="close"></button>
                        </div>
                        <div class="modal-body" v-if="editActivity != null">
                            <div class="row mb-1">
                                <label class="col-sm-4">活動編號 :</label>
                                <label class="col-sm-5">{{editActivity.activityId}}</label>
                            </div>
                            <div class="row mb-1">
                                <label class="col-sm-4">發起人 :</label>
                                <label class="col-sm-5">{{editActivity.memberName}}</label>
                            </div>
                            <div class="row mb-1">
                                <label class="col-sm-4">揪團發起時間 :</label>
                                <label class="col-sm-5">{{editActivity.createdTime}}</label>
                            </div>
                            <div class="row mb-1">
                                <label class="col-sm-4">參與人數 :</label>
                                <label class="col-sm-5">{{editActivity.joinCount}}</label>
                            </div>
                            <div class="row mb-1">
                                <label for="editActivitiesName" class="col-sm-4">揪團名稱 :</label>
                                <input id="editActivitiesName" class="col-sm-5" type="text"
                                    v-model="editActivity.activitiesName" placeholder="輸入揪團名稱">
                            </div>
                            <div class="row mb-1">
                                <label for="editActivitiesAddress" class="col-sm-4">揪團地點 :</label>
                                <input id="editActivitiesAddress" class="col-sm-5" type="text"
                                    v-model="editActivity.activitiesAddress" placeholder="輸入揪團地點">
                            </div>
                            <div class="row mb-1">
                                <label for="editLimitCount" class="col-sm-4">限制人數 :</label>
                                <input id="editLimitCount" class="col-sm-5" type="text"
                                    v-model="editActivity.limitCount" placeholder="輸入限制人數">
                            </div>
                            <div class="row mb-1">
                                <label for="editEndTime" class="col-sm-4">參與截止時間 :</label>
                                <input id="editEndTime" class="col-sm-5" type="date" v-model="editActivity.endTime"
                                    placeholder="輸入參與截止時間">
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal"
                                v-on:click="close">取消</button>
                            <button type="button" class="btn btn-primary" data-bs-dismiss="modal"
                                v-on:click="editinfo">確認修改</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- /.card-body -->
    </div>
    <!-- /.card -->

</section>
<!-- /.content -->
</div>
<!-- /.content-wrapper -->

@section Scripts{
    <script>
        var VueActivitiesPage = new Vue({
            el: "#VueActivitiesPage",
            data: {
                activities: [],
                editActivity: null,
                ErrMsg: '',
                Success: '',
                currentPage: 1,
                pageSize: 10,
                pageVisible: true,
            },
            mounted: function () {
                var self = this;
                axios({
                    method: 'get',
                    url: '/Administrators/AdministratorApi/GetAllActivities'
                })
                    .then(function (res) {
                        console.log(res);
                        self.activities = res.data;
                    })
                    .catch(function (error) {
                        console.log(error);
                    });
            },
            computed:{
                totalPages() {
                    const total = Math.ceil(this.activities.length / this.pageSize)
                    if(total === 1){
                        this.pageVisible = false;
                    }
                    return total;
                },
                activitiesByPage() {
                    const startIndex = (this.currentPage - 1) * this.pageSize;
                    const endIndex = startIndex + this.pageSize;
                    return this.activities.slice(startIndex, endIndex);
                },
            },
            methods: {
                prevPage() {
                    if (this.currentPage > 1) {
                        this.changePage(this.currentPage - 1);
                    }
                },
                nextPage() {
                    if (this.currentPage < this.totalPages) {
                        this.changePage(this.currentPage + 1);
                    }
                },
                editModal: function (request) {
                    this.editActivity = { ...request };
                },
                editinfo: function () {
                    var self = this;
                    axios({
                        method: 'put',
                        url: `/Administrators/AdministratorApi/UpdateActivity/${self.editActivity.activityId}`,
                        data: self.editActivity,
                    })
                        .then(function (res) {
                            console.log(res);
                            self.Success = res.data;
                            const index = self.activities.findIndex(a => a.activityId === self.editActivity.activityId);
                            self.activities.splice(index, 1, self.editActivity);
                            self.editActivity = null;
                                Swal.fire({
                                    title: self.Success,
                                    icon: 'success',
                                    timer: 12000
                                });
                        })
                        .catch(function (error) {
                            console.log(error);
                            self.ErrMsg = error.response.data.errors;
                            var message = Object.values(error.response.data.errors).join('<br>');
                            Swal.fire({
                                title: '修改失敗',
                                text: `${message}`,
                                icon: 'error',
                                timer: 12000
                            });
                        });

                },
                close: function () {
                    this.editActivity = null;
                },
                deleteInfo: function (request) {
                    var self = this;
                    Swal.fire({
                        title: '確認要刪除?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: '是的, 刪除!',
                        cancelButtonText: '取消!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            axios({
                                method: 'delete',
                                url: `/Administrators/AdministratorApi/DeleteActivity/${request.activityId}`
                            }).then(function (res) {
                                console.log(res);
                                const index = self.activities.findIndex(a => a.activityId === request.activityId);
                                self.activities.splice(index, 1);
                            })
                                .catch(function (error) {
                                    console.log(error);
                                });
                            Swal.fire(
                                '刪除!',
                                '資料已刪除.',
                                'success'
                            );
                        }
                    })
                }
            }
        });

    </script>
    
}


